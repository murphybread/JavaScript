#!/bin/sh

# 타입: feat, fix, docs, style, refactor, test, chore
# 스코프: 변경된 파일이나 모듈 (선택 사항)
# 주제: 간략한 설명 (첫 글자 대문자, 명령형, 마침표 없음)
# 바디: 상세한 설명 (선택 사항)
# 푸터: 이슈 ID 참조 또는 추가 정보 (선택 사항)

# 커밋 메시지 파일 경로
commit_msg_file=$1

# 정규식 패턴: <type>(<scope>): <subject>
pattern="^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .{1,80}$"

# 커밋 메시지 내용 읽기
commit_msg=$(cat "$commit_msg_file")

# 패턴 검증
if ! echo "$commit_msg" | grep -Eq "$pattern"; then
  echo "❌ Invalid commit message format."
  echo ""
  echo "Your commit message should follow this format:"
  echo "<type>(<scope>): <subject>"
  echo ""
  echo "Type must be one of:"
  echo "  feat, fix, docs, style, refactor, test, chore"
  echo ""
  echo "Scope is optional but should be related to the affected part of the codebase."
  echo ""
  echo "Subject should be a brief description of the change (1-80 characters)."
  echo "Example:"
  echo "  feat(auth): add login functionality"
  echo ""
  exit 1
fi
